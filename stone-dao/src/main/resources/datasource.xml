<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<config>
	<!-- 基本属性 driverClassName、url、username、password -->
	<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	<property name="url" value="jdbc:mysql://127.0.0.1:3306/test"/>
	<property name="username" value="root"/>
	<property name="password" value="password"/>
	<!-- 如果密码是加密的情况，需要配置对数据库密码进行解密。还需要对filters添加config属性才能执行解密操作 -->
<!-- 	<property name="connectionProperties" value="config.decrypt=true"/> -->
	
	<!-- 配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。如果没有配置，将会自动生成一个名字 -->
	<property name="name" value="stone"/>
	<!-- 属性类型是字符串，通过别名的方式配置扩展插件， 常用的插件有：监控统计用的filter:stat、日志用的filter:log4j、防御sql注入的filter:wall -->
<!-- 	<property name="filters" value="log4j,config"/> -->
	<property name="filters" value="log4j"/>
	
	<!-- 配置初始化大小、最小值、最大值 -->
	<property name="initialSize" value="3"/>
	<property name="minIdle" value="1"/>
	<property name="maxActive" value="20"/>
	<!-- 配置获取连接等待超时的时间 -->
	<property name="maxWait" value="60000"/>
	
	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<property name="timeBetweenEvictionRunsMillis" value="60000"/>
	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<property name="minEvictableIdleTimeMillis" value="300000"/>
	
	<!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、 testWhileIdle都不会其作用 -->
	<property name="validationQuery" value="SELECT 'x'"/>
	<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
	<property name="testOnBorrow" value="false"/>
	<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
	<property name="testOnReturn" value="false"/>
	<!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
	<property name="testWhileIdle" value="true"/>
	
	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	<property name="poolPreparedStatements" value="true"/>
	<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
</config>